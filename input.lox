var a = "global a";
var b = "global b";
var c = "global c";
{
    var a = "outer a";
    var b = "outer b";
    {
        var a = "inner a";
        print a;
        print b;
        print c;
    }
    print a;
    print b;
    print c;
}
print a;
print b;
print c;

if ( 3 >= 0 ) print "hello if statement";

if(false) print "Hello liar";
else 
print "Truth always comes out";

if (false or true) print "false or true";
if (false and true) print "false and true";

var i = 3;
while (i > 0) {
    i = i - 1;
    print i;
}

var a = 0;
var temp;

for (var b = 1; a < 100; b = temp + b) {
    print a;
    temp = a;
    a = b;
}

fun add(a,b) {
    print a+b;
}

print add;

fun sayHi(first, last) {
    print "Hi, " + first;
}

sayHi("Dear", "Reader");

fun count(n) {
    if(n>1) {
        count(n-1);
    }
}

count(3);

print clock()/1000;

print "years:";
print clock()/31556926;

print "FIB";
fun fib(n) { 
    if(n <= 1) return n;
    return fib(n-2) + fib(n-1);
}

var before = clock();
for (var i = 0; i < 20; i = i + 1) {
    print fib(i);
}
var after = clock();
print (after - before);

fun makeCounter() {
    var i = 0;
    fun count() {
        i = i + 1;
        print i;
    }
    return count;
}

var counter = makeCounter();
counter();
counter();

var resolve = "global";

{
    print "in a block";
  fun showA() {
    print resolve;
  }

  showA();
  var resolve = "block";
  showA(); 
}

class Breakfast {
    cook() {
        print "Eggs a-fryin'!";
    }

    serve(who) {
        print "Enjoy your breakfast, " + who + ".";
    }
}

print Breakfast;

class Bagel {}
var bagel = Bagel();
print bagel;

bagel.smear = "creamcheese";
print bagel.smear;

class Bacon {
    eat() {
        print "Bacon pancakes!";
    }
}

Bacon().eat();

class Cake {
    taste() {
        var adjective = "delicious";
        print "The " + this.flavor + " cake is " + adjective + "!";
    }
}

var cake = Cake();
cake.flavor = "German chocolate";
cake.taste();

class Foo {
    init() {
        print "this is the constructor";
    }
}

var foo = Foo();